// <auto-generated />
using System;
using DietPlanner.Infrastructure.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DietPlanner.Api.Migrations
{
    [DbContext(typeof(DietPlannerContext))]
    [Migration("20190422171031_Height, sex and birthday fields added")]
    partial class Heightsexandbirthdayfieldsadded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DietPlanner.Core.Domain.CustomDay", b =>
                {
                    b.Property<Guid>("CustomDayId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Calories");

                    b.Property<DateTime>("Date");

                    b.Property<Guid>("PlanId");

                    b.HasKey("CustomDayId");

                    b.HasIndex("PlanId");

                    b.ToTable("CustomDays");
                });

            modelBuilder.Entity("DietPlanner.Core.Domain.Plan", b =>
                {
                    b.Property<Guid>("PlanId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("PlannedWeight");

                    b.Property<DateTime>("TargetDate");

                    b.Property<Guid>("UserId");

                    b.HasKey("PlanId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("DietPlanner.Core.Domain.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Birthday");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Email");

                    b.Property<int>("Height");

                    b.Property<string>("Password");

                    b.Property<string>("Role");

                    b.Property<string>("Salt");

                    b.Property<string>("Sex");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<string>("Username");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DietPlanner.Core.Domain.WeightPoint", b =>
                {
                    b.Property<Guid>("WeightPointId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<Guid>("UserId");

                    b.Property<int>("Weight");

                    b.HasKey("WeightPointId");

                    b.HasIndex("UserId");

                    b.ToTable("WeightPoints");
                });

            modelBuilder.Entity("DietPlanner.Core.Domain.CustomDay", b =>
                {
                    b.HasOne("DietPlanner.Core.Domain.Plan", "Plan")
                        .WithMany("CustomDays")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DietPlanner.Core.Domain.Plan", b =>
                {
                    b.HasOne("DietPlanner.Core.Domain.User", "User")
                        .WithOne("Plan")
                        .HasForeignKey("DietPlanner.Core.Domain.Plan", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DietPlanner.Core.Domain.WeightPoint", b =>
                {
                    b.HasOne("DietPlanner.Core.Domain.User", "User")
                        .WithMany("WeightPoints")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
